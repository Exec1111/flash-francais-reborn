from pydantic import BaseModel, Field
from typing import List, Literal

class ChatMessage(BaseModel):
    """Represents a single message in the chat history."""
    role: Literal["user", "assistant", "system"] = Field(
        ..., 
        description="The role of the message sender (user, assistant, or system)."
    )
    content: str = Field(
        ..., 
        description="The text content of the message."
    )

class ChatInput(BaseModel):
    """Input schema for the chat endpoint."""
    message: str = Field(
        ..., 
        description="The new message sent by the user."
    )
    history: List[ChatMessage] = Field(
        default=[], 
        description="The previous chat history between the user and the assistant."
    )
    # We could add other parameters here later, like temperature, specific model override, etc.

class ChatOutput(BaseModel):
    """Output schema for the chat endpoint."""
    response: str = Field(
        ..., 
        description="The response generated by the AI assistant."
    )
    # We could add more info later, like token usage, etc.
